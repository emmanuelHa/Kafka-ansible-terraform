### The configuration prefix to use, by default /etc. Note - Only valid to customize when installation_method: archive
config_prefix: "/etc"

zookeeper:
  properties:
    clientPort: 2181
kerberos:
  keytab_dir: /etc/security/keytabs
confluent:
  package_version: 6.0.0
  repo_version: 6.0
  support:
    customer_id: anonymous
    metrics_enabled: false

jolokia_jar_path: /opt/jolokia/jolokia.jar
lenses_jar_path: /opt/connectors
zookeeper_jolokia_port: 7770
kafka_broker_jolokia_port: 7771
schema_registry_jolokia_port: 7772
kafka_connect_jolokia_port: 7773
ksql_jolokia_port: 7774
kafka_rest_jolokia_port: 7775

open_file_limit: 500000
kerberos_configure: true

jolokia_enabled: true
jmxexporter_enabled: false


jmxexporter_install_path: /opt/prometheus/
jmxexporter_jar_path: /opt/prometheus/jmx_prometheus_javaagent.jar
kafka_broker_jmxexporter_port: 8080

rbac_enabled: false
confluent_server_enabled: "{{ true if rbac_enabled else false }}"

# Other options: kerberos, plain
sasl_protocol: none

ssl_enabled: false
ssl_mutual_auth_enabled: false

kafka_broker_ssl_enabled: "{{ ssl_enabled }}"
kafka_broker_ssl_mutual_auth_enabled: "{{ ssl_mutual_auth_enabled }}"
kafka_port: 9092
# Should default to 'PLAINTEXT'
kafka_broker_security_protocol: >-
  {{ 'SASL_SSL' if (sasl_protocol == 'kerberos' or sasl_protocol == 'plain') and kafka_broker_ssl_enabled
  else 'SASL_PLAINTEXT' if (sasl_protocol == 'kerberos' or sasl_protocol == 'plain') and not kafka_broker_ssl_enabled
  else 'SSL' if kafka_broker_ssl_enabled and sasl_protocol == 'none'
  else 'PLAINTEXT' }}

ssl_provided_keystore_and_truststore: false
ssl_custom_certs: false
# With self_signed on and ssl_enabled off, self_signed var should not get honored
self_signed: "{{ false if ssl_provided_keystore_and_truststore or ssl_custom_certs else true }}"
ssl_self_signed_ca_cert_filename: snakeoil-ca-1.crt
ssl_self_signed_ca_key_filename: snakeoil-ca-1.key
ssl_self_signed_ca_password: capassword123
regenerate_ca: true

truststore_storepass: "{{ ssl_truststore_password if ssl_provided_keystore_and_truststore else 'confluenttruststorepass'}}"
truststore_path: /var/ssl/private/client.truststore.jks
keystore_path: /var/ssl/private/client.keystore.jks
keystore_storepass: "{{ ssl_keystore_store_password if ssl_provided_keystore_and_truststore else 'confluentkeystorestorepass'}}"
keystore_keypass: "{{ ssl_keystore_key_password if ssl_provided_keystore_and_truststore else keystore_storepass }}"

certs_updated: false

schema_registry_ssl_enabled: "{{ssl_enabled}}"
schema_registry_ssl_mutual_auth_enabled: "{{ ssl_mutual_auth_enabled }}"
schema_registry_http_protocol: "{{ 'https' if schema_registry_ssl_enabled else 'http' }}"
schema_registry_listener_port: 8081

kafka_rest_ssl_enabled: "{{ssl_enabled}}"
kafka_rest_ssl_mutual_auth_enabled: "{{ ssl_mutual_auth_enabled }}"
kafka_rest_http_protocol: "{{ 'https' if kafka_rest_ssl_enabled else 'http' }}"
kafka_rest_port: 8082

# Kafka Connect Variables

### Default Kafka Connect config prefix. Only valid to customize when installation_method: archive
kafka_connect_config_prefix: "{{ config_prefix }}/kafka"
### Service Name to define/use for Kafka Connect System.d.
kafka_connect_service_name: "{{kafka_connect_default_service_name}}"
### Config/Properties Filename to use when setting up and configuring Kafka Connect
kafka_connect_config_filename: "{{kafka_connect_default_config_filename}}"
kafka_connect_ssl_enabled: "{{ssl_enabled}}"
kafka_connect_ssl_mutual_auth_enabled: "{{ ssl_mutual_auth_enabled }}"
kafka_connect_http_protocol: "{{ 'https' if kafka_connect_ssl_enabled else 'http' }}"
kafka_connect_rest_port: 8083

ksql_ssl_enabled: "{{ssl_enabled}}"
ksql_ssl_mutual_auth_enabled: "{{ ssl_mutual_auth_enabled }}"
ksql_http_protocol: "{{ 'https' if ksql_ssl_enabled else 'http' }}"
ksql_listener_port: 8088

control_center_ssl_enabled: "{{ssl_enabled}}"
control_center_ssl_mutual_auth_enabled: "{{ ssl_mutual_auth_enabled }}"
control_center_http_protocol: "{{ 'https' if control_center_ssl_enabled else 'http' }}"
control_center_port: 9021